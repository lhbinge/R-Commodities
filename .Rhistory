g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
index_plot <- CV[CV$Group.2 %in% c("wheat","mealies"),]
colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
rscomdata$year <- format(rscomdata$date,format="%Y")
CV <- aggregate(rscomdata$price, by=list(rscomdata$year,rscomdata$commodity),
FUN = function(x) sqrt(var(x,na.rm = TRUE))/mean(x,na.rm = TRUE))
index_plot <- CV[CV$Group.2 %in% c("wheat","mealies"),]
colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
index_plot <- CV[CV$Group.2 %in% c("wheat","mealies"),]
colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
index_plot <- CV[CV$Group.2 %in% c("wheat","mealies","beef","butter","tobacco"),]
colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
View(comdata)
View(rscomdata)
View(comdata)
CV <- aggregate(rscomdata$price, by=list(rscomdata$date,rscomdata$commodity),
FUN = function(x) sqrt(var(x,na.rm = TRUE))/mean(x,na.rm = TRUE))
index_plot <- CV[CV$Group.2 %in% c("wheat","mealies","beef","butter","tobacco"),]
colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=value, group=variable, colour=variable))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
index_plot <- CV[CV$Group.2 %in% c("tobacco"),]
View(index_plot)
index_plot <- CV[CV$Group.2 %in% c("tobacco"),]
colnames(index_plot) <- c("Date","variable","value") # conve
index_plot$time <- 1:299
index_plot$time <- 1:299
index_plot$lnCV <- log(index_plot$value)
lm(CV ~ time,data=index_plot)
CV1 <- CV[CV$Group.2 %in% c("tobacco"),]
View(CV1)
CV1 <- CV[CV$Group.2 %in% c("tobacco"),]
colnames(CV1) <- c("Date","product","CV") #
CV1$time <- 1:299
CV1$lnCV <- log(CV1$CV)
lm(CV ~ time,data=CV1)
str(CV1)
summary(lm(CV ~ time,data=CV1))
CV1 <- CV[CV$Group.2 %in% c("wheat"),]
colnames(CV1) <- c("Date","product","CV") #
CV1$time <- 1:299
CV1$lnCV <- log(CV1$CV)
m <- lm(CV ~ time,data=CV1)
summary(m)
serial.test(m, lags.bg=2, type="BG")
library(fUnitRoots)
summary(ur.df(CV1, c("none"), selectlags = c("AIC")))
serial.test(m, lags.bg=2, type="BG")
suppressMessages(library(vars))
suppressMessages(library(tseries))
suppressMessages(library(urca))
serial.test(m, lags.bg=2, type="BG")
arch.test(m, lags.single=1, lags.multi = 1, multivariate.only = F)
normality.test(m, multivariate.only = F)
m1 <- lm(CV ~ time,data=CV1)
summary(m1)
resid(m1) #List of residuals
plot(density(resid(m1))) #A density plot
qqnorm(resid(m1)) # A quantile normal plot - good for checking normality
qqline(resid(m1))
library(MASS)
sresid <- studres(m1)
hist(sresid, freq=FALSE,
main="Distribution of Studentized Residuals")
xfit<-seq(min(sresid),max(sresid),length=40)
yfit<-dnorm(xfit)
lines(xfit, yfit)
plot(resid(m1)) #List of residuals
acf(m1)
acf(resid(m1))
m1 <- lm(lnCV ~ time,data=CV1)
summary(m1)
time <- 1:299
lnCV <- log(CV1$CV)
m1 <- lm(lnCV ~ time)
summary(m1)
CV1 <- CV[CV$Group.2 %in% c("wheat"),]
colnames(CV1) <- c("Date","product","CV") #
time <- 1:299
lnCV <- log(CV1$CV)
m1 <- lm(lnCV ~ time)
summary(m1)
lnCV_1 <- log(CV1$CV[2:299])
dlnCV <- diff(lnCV)
lnCV <- log(CV1$CV)
lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
dlnCV_1 <- dlnCV[2:298]
m1 <- lm(lnCV ~ time)
summary(m1)
m1 <- lm(dlnCV[-1] ~ time[-1] + lnCV_1[-1] + dlnCV_1,data=CV1)
m1 <- lm(dlnCV[-1] ~ time[-2] + lnCV_1[-1] + dlnCV_1,data=CV1)
m1 <- lm(dlnCV[-1] ~ time[-1:-2] + lnCV_1[-1] + dlnCV_1,data=CV1)
summary(m1)
m1 <- lm(dlnCV[-1] ~ time[-1:-2] + lnCV_1[-1] + dlnCV_1)
summary(m1)
m1 <- lm(dlnCV[-1] ~ time[-1:-2] + dlnCV_1)
summary(m1)
lnCV <- log(CV1$CV)
lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
dlnCV_1 <- dlnCV[2:298]
m1 <- lm(dlnCV[-298] ~ time[-298:-299] + lnCV_1[-298] + dlnCV_1)
summary(m1)
CV1 <- CV[CV$Group.2 %in% c("tobacco"),]
colnames(CV1) <- c("Date","product","CV") #
time <- 1:299
lnCV <- log(CV1$CV)
lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
dlnCV_1 <- dlnCV[2:298]
m1 <- lm(lnCV ~ time)
summary(m1)
m1 <- lm(dlnCV[-298] ~ time[-298:-299] + lnCV_1[-298] + dlnCV_1)
summary(m1)
library(dynlm)
m1 <- lm(dlnCV ~ L(time) + L(lnCV,1) + L(dlnCV,1))
library(dynlm)
m1 <- dynlm(dlnCV ~ L(time) + L(lnCV,1) + L(dlnCV,1))
?dynnlm
?dynlm
m1 <- dynlm(dlnCV ~ L(time[,-1:-2]) + L(lnCV,1) + L(dlnCV,1))
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1))
m1 <- dynlm(dlnCV ~ L(time[-1:-2]) + L(lnCV,1) + L(dlnCV,1))
time <- ts(1:299)
lnCV <- ts(log(CV1$CV))
dlnCV <- diff(lnCV)
m1 <- dynlm(dlnCV ~ L(time[-1:-2]) + L(lnCV,1) + L(dlnCV,1))
str(dlnCV)
time <- ts(1:299,12)
lnCV <- ts(log(CV1$CV,12))
#lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV,12)
#dlnCV_1 <- dlnCV[2:298]
m1 <- dynlm(dlnCV ~ L(time[-1:-2]) + L(lnCV,1) + L(dlnCV,1))
m1 <- lm(dlnCV[-1] ~ time[-1:-2] + lnCV_1[-1] + dlnCV_1)
m1 <- lm(dlnCV[-298] ~ time[-1:-2] + dlnCV_1)
dlnCV <- diff(lnCV,12)
time <- 1:299
lnCV <- log(CV1$CV)
#lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
time <- ts(1:299,12)
lnCV <- ts(log(CV1$CV,12))
#lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
m1 <- dynlm(dlnCV ~ L(time[-1:-2]) + L(lnCV,1) + L(dlnCV,1))
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1))
summary(m1)
CV1 <- CV[CV$Group.2 %in% c("wheat"),]
colnames(CV1) <- c("Date","product","CV") #
time <- ts(1:299,12)
lnCV <- ts(log(CV1$CV,12))
#lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
#dlnCV_1 <- dlnCV[2:298]
m1 <- lm(lnCV ~ time)
summary(m1)
#library(dynlm)
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1))
summary(m1)
CV1 <- CV[CV$Group.2 %in% c("mutton"),]
colnames(CV1) <- c("Date","product","CV") #
time <- ts(1:299,12)
lnCV <- ts(log(CV1$CV,12))
#lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
#dlnCV_1 <- dlnCV[2:298]
m1 <- lm(lnCV ~ time)
summary(m1)
#library(dynlm)
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1))
summary(m1)
plot(resid(m1))
plot(density(resid(m1))) #A density plot
qqnorm(resid(m1)) # A quantile normal plot - good for checking normality
qqline(resid(m1))
sresid <- studres(m1)
hist(sresid, freq=FALSE,
main="Distribution of Studentized Residuals")
xfit<-seq(min(sresid),max(sresid),length=40)
yfit<-dnorm(xfit)
lines(xfit, yfit)
acf(resid(m1))
CV1 <- CV[CV$Group.2 %in% c("eggs"),]
colnames(CV1) <- c("Date","product","CV") #
time <- ts(1:299,12)
lnCV <- ts(log(CV1$CV,12))
#lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
#dlnCV_1 <- dlnCV[2:298]
m1 <- lm(lnCV ~ time)
summary(m1)
#library(dynlm)
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1))
summary(m1)
#m1 <- lm(dlnCV[-298] ~ time[-1:-2] + lnCV_1[-298] + dlnCV_1)
plot(resid(m1))
View(CV)
war <- 0
war[122:153] <- 1
m1 <- lm(lnCV ~ time + war)
summary(m1)
#library(dynlm)
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1) + war)
summary(m1)
war <- seq(0,0,299)
seq(0,0,299)
?seq
war <- seq(0,0,length.out = 299)
war[122:153] <- 1
m1 <- lm(lnCV ~ time + war)
summary(m1)
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1) + war)
war <- ts(war,12)
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1) + war)
summary(m1)
CV1 <- CV[CV$Group.2 %in% c("tobacco"),]
colnames(CV1) <- c("Date","product","CV") #
time <- ts(1:299,12)
lnCV <- ts(log(CV1$CV,12))
#lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
#dlnCV_1 <- dlnCV[2:298]
war <- seq(0,0,length.out = 299)
war[122:153] <- 1
war <- ts(war,12)
m1 <- lm(lnCV ~ time + war)
summary(m1)
#library(dynlm)
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1) + war)
summary(m1)
CV1 <- CV[CV$Group.2 %in% c("wheat"),]
colnames(CV1) <- c("Date","product","CV") #
time <- ts(1:299,12)
lnCV <- ts(log(CV1$CV,12))
#lnCV_1 <- lnCV[2:299]
dlnCV <- diff(lnCV)
#dlnCV_1 <- dlnCV[2:298]
war <- seq(0,0,length.out = 299)
war[122:153] <- 1
war <- ts(war,12)
m1 <- lm(lnCV ~ time + war)
summary(m1)
#library(dynlm)
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1) + war)
summary(m1)
plot(resid(m1)) #List of residuals
acf(resid(m1))
m1 <- lm(lnCV ~ time)
plot(resid(m1))
bgtest(formula=m1,order=2,type="F")$p.value
bptest(formula=m1)$p.value
pearson.test(m1$residuals)$p.value
resettest(m1)$p.value
bgtest(formula=m1,order=2,type="F")
m1 <- dynlm(dlnCV ~ L(time[-1]) + L(lnCV,1) + L(dlnCV,1))
pearson.test(m1$residuals)
bptest(formula=m1)
resettest(m1)
resettest(m1)$p.value
View(rscomdata)
library(lmtest)
library(nortest)
bptest(formula=m1)
pearson.test(m1$residuals)
resettest(m1)
View(comdata)
toets <- dcast(comdata, wheat ~ date + town)
View(toets)
toets <- dcast(date + town ~ wheat, data=comdata)
toets <- dcast(date + town ~ wheat, data=comdata, function=mean)
toets <- dcast(date + town ~ wheat, data=comdata, mean)
?dcast
dcast(comdata, date ~ wheat, fun=mean)
dcast(rscomdata, date ~ wheat, fun=mean)
View(rscomdata)
dcast(rscomdata, date ~ commodity, fun=mean)
dcast(rscomdata, date ~ commodity, value.var=commodity, fun=mean)
dcast(rscomdata, date ~ commodity, value.var=wheat, fun=mean)
toets <- dcast(comdata, date ~ commodity, value.var=wheat, fun=mean)
toets <- dcast(comdata, date ~ commodity,fun=mean)
toets <- dcast(date ~ wheat, data=comdata, mean)
toets <- acast(date ~ wheat, data=comdata, mean)
toets <- acast(date ~ wheat, data=comdata[,c(2,6)], mean)
toets <- acast(wheat ~ date, data=comdata[,c(2,6)], mean)
toets <- dcast(town ~ date, value.var = "wheat", data=comdata[,c(2,5,6)], mean)
toets <- dcast(date ~ town, value.var = "wheat", data=comdata[,c(2,5,6)], mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
abs(1-toets[,-1]/toets$Mean)
toets1 <- abs(1-toets[,-1]/toets$Mean)
View(toets1)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,21:22]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
toets <- dcast(date ~ town, value.var = "beef", data=comdata[,c(2,5,6)], mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,21:22]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
toets <- dcast(date ~ town, value.var = "beef", data=comdata, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,21:22]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
toets <- dcast(date ~ town, value.var = "mutton", data=comdata, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,21:22]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
toets <- dcast(date ~ town, value.var = "eggs", data=comdata, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,21:22]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
toets <- dcast(date ~ town, value.var = "tobacco", data=comdata, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,21:22]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
comdata1 <- comdata[comdata$towns %in% wc.towns,]
toets <- dcast(date ~ town, value.var = "tobacco", data=comdata1, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,c("Date","Mean")]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
comdata1 <- comdata[comdata$towns %in% wc.towns,]
toets <- dcast(date ~ town, value.var = "tobacco", data=comdata1, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,c("Date","Mean")]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
View(comdata1)
comdata1 <- comdata[comdata$towns %in% wc.towns,]
wc.towns
comdata1 <- comdata[comdata$town %in% wc.towns,]
toets <- dcast(date ~ town, value.var = "tobacco", data=comdata1, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,c("Date","Mean")]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
toets <- dcast(date ~ town, value.var = "beef", data=comdata1, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,c("Date","Mean")]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
toets <- dcast(date ~ town, value.var = "wheat", data=comdata1, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,c("Date","Mean")]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
comdata1 <- comdata[comdata$town %in% cape,]
toets <- dcast(date ~ town, value.var = "wheat", data=comdata1, mean)
toets$Mean <- rowMeans(toets[,-1],na.rm=TRUE)
toets1 <- abs(1-toets[,-1]/toets$Mean)
toets1$Mean <- rowMeans(toets1[,-1],na.rm=TRUE)
toets1$Date <- crops$Date
index_plot <- toets1[,c("Date","Mean")]
#colnames(index_plot) <- c("Date","variable","value") # convert to long format
g <- ggplot(data=index_plot,aes(x=Date, y=Mean, group=1))
g <- g + geom_line()
g <- g + ylab("Inflation rate")+ xlab("")
g <- g + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
g <- g + theme(legend.title=element_blank()) + theme(legend.position="bottom")
#g <- g + scale_x_date(labels = date_format("%Y"),breaks = date_breaks("year"))
g
time <- ts(1:299,12)
lnABS <- ts(log(toets1$Mean,12))
#lnCV_1 <- lnCV[2:299]
dlnABS <- diff(lnABS)
#dlnCV_1 <- dlnCV[2:298]
#war <- seq(0,0,length.out = 299)
#war[122:153] <- 1
#war <- ts(war,12)
m1 <- lm(lnABS ~ time)
summary(m1)
#library(dynlm)
m1 <- dynlm(dlnABS ~ L(time[-1]) + L(lnABS,1) + L(dlnABS,1))
summary(m1)
